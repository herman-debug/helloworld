小和问题或者逆序对问题都可采取类似解法
public static void main(String[] args) {
        int[] a = {1,3,4,6,2,1,8};
        int L = 0;
        int R = a.length - 1;
        System.out.println(process(a,L,R));

    }
    public static int process(int[] a,int L,int R){
        if (L==R) {
            return 0;
        }
        int M=L+((R-L)>>1);
        return process(a, L, M)+process(a,M+1,R)+merge(a,L,M,R);
    }
    public static int merge(int[] a,int L,int M,int R) {
        int P=M+1;
        int res=0;
        int[] help =new int[R-L+1];
        int i=0;
        int P1=L;
        while (L<=M && P<=R) {
            res+=a[L]>a[P]?(R-P+1):0;
            help[i++]=a[L]>a[P]?a[L++]:a[P++];
        }
        while (L<=M ) {
            help[i++]=a[L++];
        }
        while (P<=R ) {
            help[i++]=a[P++];
        }

        for (int j=0;j<help.length;j++) {
            a[P1+j]=help[j];
        }
        return res;


    }
